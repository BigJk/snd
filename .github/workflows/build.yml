name: Build

on:
  push: 
    branches: [ matrix-build ]

jobs:
  build-frontend:
    name: Build snd-frontend
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    - name: Setup Node.js environment
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: npm
        cache-dependency-path: frontend/package-lock.json
    - name: Install Frontend Dependencies
      working-directory: frontend
      run: npm ci
    - name: Build Frontend
      working-directory: frontend
      run: npm run build
    - name: Archive Frontend
      uses: actions/upload-artifact@v3
      with:
        name: snd-frontend
        path: frontend/dist
        if-no-files-found: error
  build-linux-app:
    name: Build ${{ matrix.artifact }}
    runs-on: ubuntu-latest
    needs: build-frontend
    strategy:
      matrix:
        include:
          # ELECTRON
          - arch: "amd64"
            tags: "ELECTRON"
            artifact: "snd-linux-amd64-gui"
          # HEADLESS
          - arch: "amd64"
            artifact: "snd-linux-amd64-headless"
          - arch: "arm64"
            artifact: "snd-linux-arm64-headless"
          - arch: "386"
            artifact: "snd-linux-i386-headless"
          - arch: "arm"
            artifact: "snd-linux-arm-headless"
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      with:
        name: snd-frontend
        path: frontend/dist
    - name: Setup Go environment
      uses: actions/setup-go@v3
      with:
        cache: true
        go-version-file: go.mod
        cache-dependency-path: go.sum
    - name: Install Backend Dependencies
      run: go mod tidy
    - name: Run Build
      run: ./build.sh
      env:
        GOOS: linux
        GOARCH: ${{ matrix.arch }}
        SND_TAGS: ${{ matrix.tags }}
    - name: Generate Short SHA
      id: sha
      run: echo "short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT 
    - name: Archive Build
      uses: actions/upload-artifact@v3
      with:
        path: build/release/
        name: ${{ matrix.artifact }}-${{ steps.sha.outputs.short }}
        if-no-files-found: error
  build-windows-app:
    name: Build ${{ matrix.artifact }}
    runs-on: windows-latest
    needs: build-frontend
    strategy:
      matrix:
        include:
          # ELECTRON
          - arch: "amd64"
            tags: "ELECTRON"
            artifact: "snd-windows-amd64-gui"
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      with:
        name: snd-frontend
        path: frontend/dist
    - name: Setup Go environment
      uses: actions/setup-go@v3
      with:
        cache: true
        go-version-file: go.mod
        cache-dependency-path: go.sum
    - name: Install Backend Dependencies
      run: go mod tidy
    - name: Run Build
      run: ./build.sh
      env:
        GOOS: windows
        GOARCH: ${{ matrix.arch }}
        SND_TAGS: ${{ matrix.tags }}
    - name: Generate Short SHA
      id: sha
      run: echo "short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT 
    - name: Archive Build
      uses: actions/upload-artifact@v3
      with:
        path: build/release/
        name: ${{ matrix.artifact }}-${{ steps.sha.outputs.short }}
        if-no-files-found: error
  build-darwin-app:
    name: Build ${{ matrix.artifact }}
    runs-on: macos-latest
    needs: build-frontend
    strategy:
      matrix:
        include:
          # ELECTRON
          - arch: "amd64"
            os: "darwin"
            tags: "ELECTRON"
            artifact: "snd-macos-amd64-gui"
          - arch: "arm64"
            os: "darwin"
            tags: "ELECTRON"
            artifact: "snd-macos-arm64-gui"

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      with:
        name: snd-frontend
        path: frontend/dist
    - name: Setup Go environment
      uses: actions/setup-go@v3
      with:
        cache: true
        go-version-file: go.mod
        cache-dependency-path: go.sum
    - name: Install Backend Dependencies
      run: go mod tidy
    - name: Run Build
      run: ./build.sh
      env:
        GOOS: windows
        GOARCH: ${{ matrix.arch }}
        SND_TAGS: ${{ matrix.tags }}
    - name: Generate Short SHA
      id: sha
      run: echo "short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT 
    - name: Archive Build
      uses: actions/upload-artifact@v3
      with:
        path: build/release/
        name: ${{ matrix.artifact }}-${{ steps.sha.outputs.short }}
        if-no-files-found: error
