name: Build

on:
  push: 
    branches: [ matrix-build ]

jobs:
  build-frontend:
    name: Build snd-frontend
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    - name: Setup Node.js environment
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: npm
        cache-dependency-path: frontend/package-lock.json
    - name: Install Frontend Dependencies
      working-directory: frontend
      run: npm ci
    - name: Build Frontend
      working-directory: frontend
      run: npm run build
    - name: Archive Frontend
      uses: actions/upload-artifact@v3
      with:
        name: snd-frontend
        path: frontend/dist
        if-no-files-found: error
  build-linux-app:
    if: false
    name: Build ${{ matrix.artifact-name }}
    runs-on: ubuntu-latest
    needs: build-frontend
    strategy:
      matrix:
        include:
          # ELECTRON
          - arch: "amd64"
            tags: "ELECTRON"
            artifact-name: "snd-linux-amd64-gui"
          # HEADLESS
          - arch: "amd64"
            artifact-name: "snd-linux-amd64-headless"
          - arch: "arm64"
            artifact-name: "snd-linux-arm64-headless"
          - arch: "386"
            artifact-name: "snd-linux-i386-headless"
          - arch: "arm"
            artifact-name: "snd-linux-arm-headless"
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    - name: Run custom action
      uses: ./.github/actions/build-app
      with:
        os: linux
        arch: ${{ matrix.arch }}
        tags: ${{ matrix.tags }}
        artifact-name: ${{ matrix.artifact-name }}
  
  build-windows-app:
    name: Build ${{ matrix.artifact-name }}
    runs-on: windows-latest
    needs: build-frontend
    strategy:
      matrix:
        include:
          # ELECTRON
          - arch: "amd64"
            libusb: false
            tags: "ELECTRON"
            artifact-name: "snd-windows-amd64-gui"
          - arch: "amd64"
            libusb: true
            tags: "ELECTRON LIBUSB"
            artifact-name: "snd-windows-amd64-gui-usb"
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    - name: Prepare libusb
      if: matrix.libusb
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: git mingw-w64-x86_64-cc mingw-w64-x86_64-pkg-config mingw-w64-x86_64-libusb
    - name: Check for libusb
      if: matrix.libusb
      shell: msys2 {0}
      run: |
        pkg-config --cflags libusb-1.0
        pkg-config --libs libusb-1.0
    - name: Run custom action
      uses: ./.github/actions/build-app
      with:
        os: windows
        arch: ${{ matrix.arch }}
        tags: ${{ matrix.tags }}
        artifact-name: ${{ matrix.artifact-name }}
        libusb-path: ${{ matrix.libusb && 'foo' || null }}
  
  build-darwin-app:
    if: false
    name: Build ${{ matrix.artifact-name }}
    runs-on: macos-latest
    needs: build-frontend
    strategy:
      matrix:
        include:
          # ELECTRON
          - arch: "amd64"
            tags: "ELECTRON"
            artifact-name: "snd-macos-amd64-gui"
          - arch: "arm64"
            tags: "ELECTRON"
            artifact-name: "snd-macos-arm64-gui"
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    - name: Run custom action
      uses: ./.github/actions/build-app
      with:
        os: darwin
        arch: ${{ matrix.arch }}
        tags: ${{ matrix.tags }}
        artifact-name: ${{ matrix.artifact-name }}
